.. meta::
   :robots: noindex, nosnippet 

.. _sink-configuration-error-handling:

===================================
Connector Error Handling Properties
===================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

.. _sink-configuration-error-handling-description-start:

Use the following configuration settings to specify how the sink connector
handles errors and to configure the dead letter queue.

.. _sink-configuration-error-handling-description-end:

.. include:: /includes/sink-config-link.rst

Settings
--------

.. _sink-configuration-error-handling-table-start:

.. list-table::
   :header-rows: 1
   :widths: 50 50

   * - Name
     - Description

   * - | **errors.log.include.messages**
     - | **Type:** boolean
       |
       | **Description:**
       | Whether the connector should include the invalid message when
         logging an error. An invalid message includes data such as record
         keys, values, and headers.
       |
       | **Default:** ``false``
       | **Accepted Values**: ``true`` or ``false``

   * - | **errors.deadletterqueue.topic.name**
     - | **Type:** string
       |
       | **Description:**
       | Name of topic to use as the dead letter queue. If blank, the
         connector does not send any invalid messages to the dead letter
         queue.
       | For more information about the dead letter queue, see the 
         :ref:`Dead Letter Queue Configuration Example <sink-dead-letter-queue-configuration-example>`.
       |
       | **Default:** ``""``
       | **Accepted Values**: A valid Kafka topic name

   * - | **errors.deadletterqueue.context.headers.enable**
     - | **Type:** boolean
       |
       | **Description:**
       | Whether the connector should include context headers when it
         writes messages to the dead letter queue.
       | For more information about the dead letter queue, see the 
         :ref:`Dead Letter Queue Configuration Example <sink-dead-letter-queue-configuration-example>`.
       |
       | **Default:** ``false``
       | **Accepted Values**: ``true`` or ``false``

   * - | **errors.deadletterqueue.topic.replication.factor**
     - | **Type:** integer
       |
       | **Description:**
       | The number of nodes on which to replicate the dead letter queue
         topic. If you are running a single-node Kafka cluster, you must
         set this to ``1``.
       | For more information about the dead letter queue, see the
         :ref:`Dead Letter Queue Configuration Example <sink-dead-letter-queue-configuration-example>`.
       |
       | **Default:** ``3``
       | **Accepted Values**: A valid number of nodes

.. _sink-configuration-error-handling-table-end:

.. _sink-dead-letter-queue-configuration-example:

Dead Letter Queue Configuration Example
---------------------------------------

Apache Kafka version 2.6 added support for handling errant records. The 
Kafka connector automatically sends messages that it cannot process to the 
**dead letter queue**. Once on the dead letter queue, you can inspect the
errant records, update them, and resubmit them for processing.

The following is an example configuration for enabling the dead letter queue
topic ``example.deadletterqueue``. This configuration specifies that the
dead letter queue and log file should record invalid messages, and that
the dead letter queue messages should include context headers.

.. code-block:: properties

   errors.tolerance=all
   errors.log.enable=true
   errors.log.include.messages=true
   errors.deadletterqueue.topic.name=example.deadletterqueue
   errors.deadletterqueue.context.headers.enable=true

To learn more about dead letter queues, see :ref:`<kafka-sink-errors-dlq>`.
