.. _kafka-troubleshoot-invalid-resume-token:

====================
Invalid Resume Token
====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


Overview
--------

Learn how to recover from an invalid resume token
in a MongoDB Kafka Connector source connector. 

.. important:: Upgrade your Connector

   {+source-connector+} versions 1.3 or later enable you to use the following
   strategies to recover from an invalid resume token error:

   - Temporarily tolerate errors
   - Change your offset partition name
  
   To use these strategies, upgrade your connector to version 1.3 or later.

Stack Trace
~~~~~~~~~~~

The following stack trace indicates that the source connector has an invalid resume token:

.. code-block:: text

   ...
   org.apache.kafka.connect.errors.ConnectException: ResumeToken not found.
   Cannot create a change stream cursor
   ...
   Command failed with error 286 (ChangeStreamHistoryLost): 'PlanExecutor
   error during aggregation :: caused by :: Resume of change stream was not
   possible, as the resume point may no longer be in the oplog
   ... 


.. _invalid-resume-token-cause:

Cause
-----

When your source connector's resume token does not correspond to
any entry in your MongoDB deployment's :ref:`oplog <replica-set-oplog>`, your
connector has no way to determine where to begin to process your MongoDB change
stream. Click the following tabs to see scenarios in which you can experience
this issue:

.. tabs::

   .. tab:: Paused Connector
      :tabid: paused-connector

      In this scenario, you pause your source connector and you fill your MongoDB
      deployment's oplog:
      
      #. You start a Kafka deployment with a {+source-connector+}.
      #. You produce a change event in your source MongoDB namespace, and your 
         connector stores a resume token corresponding to this event.
      #. You pause your source connector.
      #. While your connector pauses, you fill your MongoDB oplog such that MongoDB
         deletes the oplog entry corresponding to your resume token.
      #. You restart your source connector and it is unable to resume
         processing as its resume token does not exist in your MongoDB oplog.


   .. tab:: Infrequently Updated Namespace
      :tabid: infrequently-updated-namespace

      In this scenario, your source connector listens for changes on an infrequently
      updated MongoDB namespace:
      
      #. You start a Kafka deployment with a {+source-connector+}.
      #. You produce a change event in your source MongoDB namespace, and your
         connector stores a resume token corresponding to this event.
      #. Your source MongoDB namespace is not updated in the time it takes for your MongoDB
         deployment to rotate the change event corresponding to your resume token out of its
         oplog.
      #. You produce a change event in your source MongoDB namespace and your 
         source connector is unable to resume processing as its resume token does 
         not exist in your MongoDB oplog.

For more information on the oplog, see the 
:ref:`MongoDB Manual <replica-set-oplog>`.

For more information on resume tokens, see the
:ref:`<source-connector-fundamentals-change-streams-resume-tokens>` guide.

Solutions
---------

You can recover from an invalid resume token by 
:ref:`resetting stored offsets <troubleshoot-delete-stored-offsets>`.

To have access to more strategies to recover from an invalid resume token,
upgrade your connector to version 1.3 or later.

.. _troubleshoot-delete-stored-offsets:
.. _troubleshoot-reset-stored-offsets:

Reset Stored Offsets
~~~~~~~~~~~~~~~~~~~~

You can reset your Kafka Connect offset data, which contains your resume token,
to allow your connector to resume processing your change stream. To reset your
stored offsets, perform the following actions:

#. Delete your connector
#. Change the name of your connector with the ``name`` property.
#. Start your newly named connector and continue to process change stream events. 

.. tip:: Naming your Connector 

   When resetting stored offset data, consider using the following pattern to
   rename your connector:

   .. code-block:: properties

      name=<existing source connector name>.<monotonically increasing number>

   This pattern records the number of times you have changed the name of your
   connector to reset stored offsets.

   .. example:: 

      Assume you named your source connector
      ``"source-values"`` and you are resetting your offset data for the first time.
      You would configure your connector name as follows:

      .. code-block:: properties

         name=source-values.1

      The next time you reset your connector's offset data, configure
      your connector as follows:

      .. code-block:: properties

         name=source-values.2

.. As far as I can tell, there is not a straightforward way to tell at runtime
   which mode you are in. The Data Engineer Persona likely knows how they
   configured their pipeline, but if they do not know they may
   have to attempt both choices.

.. note:: Delete Stored Offsets for All Topics

   If you have a standalone {+kafka-connect+} process running only one connector, you can
   recover from an invalid resume token by deleting stored offsets for all
   topics in your {+kafka-connect+} deployment. To delete stored offsets, perform the
   following actions:

   #. Delete the file referenced by the ``offset.storage.file.filename`` property of 
      your Kafka Connect deployment.
   #. Restart your source connector and continue to process change stream events. 
