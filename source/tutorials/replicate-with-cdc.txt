=================================================
Replicate Data with a Change Data Capture Handler
=================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------


Follow this tutorial to learn how to use a
*change data capture (CDC) handler** to replicate data with the {+mkc+}.
A CDC handler is an application that translates CDC events into MongoDB
write operations. Use a CDC handler when you need to reproduce changes in
one datastore into another datastore.

In this tutorial, you run a CDC handler to make two MongoDB collections
contain the same documents.

If you want to learn more about how CDC handlers work, see the
:ref:`<sink-fundamentals-cdc-handler>` guide.

.. include:: /includes/tutorials/setup.rst

Replicate Data with a CDC Handler
----------------------------------

.. procedure::
   :style: connected

   .. step:: Configure the Source Connector


      .. code-block:: bash

         nano cdc-source.json

      .. code-block:: json

         {
           "name": "mongo-cdc-source",
           "config": {
             "connector.class": "com.mongodb.kafka.connect.MongoSourceConnector",
             "connection.uri": "mongodb://mongo1",
             "database": "CDCTutorial",
             "collection": "Source"
           }
         }

      .. code-block:: bash

         cx cdc-source.json

      .. note::

         The ``cx`` command is a custom script included in the tutorial
         development environment. This script runs the following
         equivalent request to the Kafka Connect REST API to create a new
         connector:

         .. code-block:: bash

            curl -X POST -H "Content-Type: application/json" -d @cdc-source.json http://connect:8083/connectors -w "\n"



      .. code-block:: bash

         status

      .. code-block:: none

         Kafka topics:
         ...
         The status of the connectors:

         source  |  mongo-cdc-source  |  RUNNING  |  RUNNING  |  com.mongodb.kafka.connect.MongoSourceConnector

         Currently configured connectors

         [
           "mongo-cdc-source"
         ]
         ...



   .. step:: Configure the Sink Connector

      .. code-block:: bash

         nano cdc-sink.json

      .. code-block:: json

        {
          "name": "mongo-cdc-sink",
          "config": {
            "connector.class": "com.mongodb.kafka.connect.MongoSinkConnector",
            "topics": "CDCTutorial.Source",
            "change.data.capture.handler": "com.mongodb.kafka.connect.sink.cdc.mongodb.ChangeStreamHandler",
            "connection.uri": "mongodb://mongo1",
            "database": "CDCTutorial",
            "collection": "Destination"
          }
        }


      .. code-block:: bash

         cx cdc-sink.json


      .. code-block:: bash

         status

   .. step:: Monitor the Kafka Topic


      .. code-block:: bash

         kafkacat -b broker:29092 -C -t CDCTutorial.Source

      .. code-block:: none

         Reached end of topic CDCTutorial.Source [0] at offset 0

   .. step:: Write Data into the Source and Watch the Data Flow

      .. code-block:: bash

         mongosh "mongodb://mongo1"

      .. code-block:: json

         use CDCTutorial
         db.Source.insert({proclaim: "Hello World!"});

      .. code-block:: json

         db.Destination.find()

      .. code-block:: json

         db.Source.deleteMany({})

      .. code-block:: none

         {"schema":{"type":"string","optional":false},"payload":"{\"_id\":
         {\"_data\": \"8261...\"},
         ...
         \"operationType\": \"delete\", \"clusterTime\": {\"$timestamp\": {\"t\":
         1631..., \"i\": 1}}, \"ns\": {\"db\": \"CDCTutorial\", \"coll\":
         \"Source\"}, \"documentKey\": {\"_id\": {\"$oid\":
         \"6138...\"}}}"}

      .. code-block:: json
db.Destination.count()

      .. code-block:: none

         0

      .. code-block:: none

         exit


Summary
-------


Learn More
----------

Read the following resources to learn more about concepts mentioned in
this tutorial:

- :ref:`<sink-fundamentals-cdc-handler>`
- :ref:`<kafka-source-change-streams>`
- :ref:`<kafka-sink-overview>`
- :ref:`<kafka-source-overview>`
