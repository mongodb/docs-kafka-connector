.. _kafka-monitoring-logging:

======================
Monitoring and Logging
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

Learn how to observe the behavior of your MongoDB source or sink
connector through **monitoring** and **logging**.
Monitoring is the process of getting information about the
activities a running program performs for use in an application
or an application performance management library.
Logging is the process of a programming writing output to log
files.

The {+mkc+} uses {+jmx-long+} to enable monitoring, and
{+l4j+} to enable logging.

Logging
-------

TODO: WRITE

Monitoring
----------

The {+mkc+} uses {+kc+}'s metrics infrastructure to
serve metrics. To read the metrics produced by your connector,
enable JMX and launch your {+kc+} deployment.

To learn how to enable JMX for a {+kc+} instance
running on your host machine, see the
`Official Kafka Documentation <https://kafka.apache.org/documentation/#monitoring>`__.

To learn how to enable JMX for a containerized {+kc+}
deployment, see
`Kafka Monitoring and Metrics Using JMX with Docker <https://docs.confluent.io/platform/current/installation/docker/operations/monitoring.html>`__.

Example - Monitor the Quick Start
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The sample environment provided in the Quick Start exposes metrics
on your host machine at the URI ``localhost:35000``.

To view these metrics with ``jconsole``, perform the following actions:

.. tip:: Download jconsole

   ``jconsole`` is part of the Java Platform, Standard Edition. To download
   ``jconsole``, download the
   `Java SE Development Kit <https://www.oracle.com/java/technologies/downloads/>`__
   from Oracle.

.. procedure::
   :style: normal

   .. step:: Start The Quick Start Pipeline and Add Connectors

      Follow the Quick Start until the :ref:`<kafka-quick-start-send-a-document>`
      step.

   .. step:: Start jconsole

      Run the following command from your command line to start ``jconsole``:

      .. code-block:: shell

         jconsole

   .. step:: Connect to {+kc+} JMX Server

      .. procedure::
         :style: connected

         .. step:: Enter Your JMX Server URI

            Enter the URI ``localhost:35000`` into the :guilabel:`Remote Process`
            text input box in the JConsole interface.

         .. step:: Press the :guilabel:`Connect` button.

         .. step:: Press the :guilabel:`Insecure Connection` in the dialog box.

   .. step:: Explore Metrics

      .. procedure::
         :style: connected

         .. step:: Navigate to the :guilabel:`MBeans` tab.

         .. step:: Inspect connector metrics in the ``{+metrics-path+}`` path.

            TODO: write

         .. step:: Complete the Quick Start

            

            

Available Metrics
-----------------

Use the attributes in the tables in this section to monitor the behavior of your source and
sink connectors through {+jmx-long+} (JMX).

.. tip:: JMX Attributes

   {+jmx-hover+} represents an individual metric as an attribute of an ``MBean``.
   To learn more about attributes and ``MBeans``, see the
   `Standard MBeans Tutorial <https://docs.oracle.com/javase/tutorial/jmx/mbeans/standard.html>`__
   from Oracle.

Sink Connector JMX Metrics
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 40 60

   * - Attribute Name
     - Description

   * - **records**
     - The total number of Kafka records a MongoDB sink task received.

   * - **records-successful**
     - The total number of Kafka records a MongoDB sink task successfully
       wrote to MongoDB.

   * - **records-failed**
     - The total number of Kafka records a MongoDB sink task failed to write
       to MongoDB.

   * - **latest-kafka-time-difference-ms**
     - The number of milliseconds of the most recent time difference recorded
       between a MongoDB sink task and Kafka. This value is calculated by
       subtracting the current time of the connector's clock and the timestamp
       of the last record the task received.

   * - **in-task-put**
     - The total number of times the {+kc+} framework executed the
       ``put()`` method of the MongoDB sink task.

   * - **in-task-put-duration**
     - The total number of milliseconds the {+kc+} framework spent
       executing the ``put()`` method of a MongoDB sink task.

   * - **in-task-put-duration-over-1-ms**
     - The total number of MongoDB sink task ``put()`` method executions
       with a duration that exceeded 1 millisecond.

   * - **in-task-put-duration-over-10-ms**
     - The total number of MongoDB sink task ``put()`` method executions
       with a duration that exceeded 10 milliseconds.

   * - **in-task-put-duration-over-100-ms**
     - The total number of MongoDB sink task ``put()`` method executions
       with a duration that exceeded 100 milliseconds.

   * - **in-task-put-duration-over-1000-ms**
     - The total number of MongoDB sink task ``put()`` method executions
       with a duration that exceeded 1000 milliseconds.

   * - **in-task-put-duration-over-10000-ms**
     - The total number of MongoDB sink task ``put()`` method executions
       with a duration that exceeded 10000 milliseconds.

   * - **in-connect-framework**
     - The total number of times code in the {+kc+} framework
       executed after the first invocation of the ``put()`` method of the
       MongoDB sink task.

   * - **in-connect-framework-duration**
     - The total number of milliseconds spent executing code in the Kafka
       Connect framework since the framework first invoked the ``put()``
       method of the MongoDB sink task. This metric does not count time
       executing code in the MongoDB sink task towards the total.

   * - **in-connect-framework-duration-over-1-ms**
     - The total number of times code in the {+kc+} framework
       executed for a duration that exceeded 1 millisecond.

   * - **in-connect-framework-duration-over-10-ms**
     - The total number of times code in the {+kc+} framework
       executed for a duration that exceeded 10 milliseconds.

   * - **in-connect-framework-duration-over-100-ms**
     - The total number of times code in the {+kc+} framework
       executed for a duration that exceeded 100 milliseconds.

   * - **in-connect-framework-duration-over-1000-ms**
     - The total number of times code in the {+kc+} framework executed
       for a duration that exceeded 1000 milliseconds.

   * - **in-connect-framework-duration-over-10000-ms**
     - The total number of times code in the {+kc+} framework executed
       for a duration that exceeded 10000 milliseconds.

   * - **processing-phases**
     - The total number of times a MongoDB sink task executed the processing
       phase on a batch of records from Kafka. The processing phase of a
       MongoDB sink task is the set of actions that starts after records are
       obtained from Kafka and ends before records are written to MongoDB.

   * - **processing-phases-duration**
     - The total number of milliseconds a MongoDB sink task spent processing
       records before writing them to MongoDB.

   * - **processing-phases-duration-over-1-ms**
     - The total number of MongoDB sink task processing phase executions with
       a duration that exceeded 1 millisecond.

   * - **processing-phases-duration-over-10-ms**
     - The total number of MongoDB sink task processing phase executions with
       a duration that exceeded 10 milliseconds.

   * - **processing-phases-duration-over-100-ms**
     - The total number of MongoDB sink task processing phase executions with
       a duration that exceeded 100 milliseconds.

   * - **processing-phases-duration-over-1000-ms**
     - The total number of MongoDB sink task processing phase executions with
       a duration that exceeded 1000 milliseconds.

   * - **processing-phases-duration-over-10000-ms**
     - The total number of MongoDB sink task processing phase executions with
       a duration that exceeded 10000 milliseconds.

   * - **batch-writes-successful**
     - The total number of batches a MongoDB sink task successfully wrote
       to the MongoDB server.

   * - **batch-writes-successful-duration**
     - The total number of milliseconds a MongoDB sink task spent successfully
       writing to the MongoDB server.

   * - **batch-writes-successful-duration-over-1-ms**
     - The total number of successful batch writes performed by the MongoDB
       sink task with a duration that exceeded 1 millisecond.

   * - **batch-writes-successful-duration-over-10-ms**
     - The total number of successful batch writes performed by the MongoDB
       sink task with a duration that exceeded 10 milliseconds.

   * - **batch-writes-successful-duration-over-100-ms**
     - The total number of successful batch writes performed by the MongoDB
       sink task with a duration that exceeded 100 milliseconds.

   * - **batch-writes-successful-duration-over-1000-ms**
     - The total number of successful batch writes performed by the MongoDB
       sink task with a duration that exceeded 1000 milliseconds.

   * - **batch-writes-successful-duration-over-10000-ms**
     - The total number of successful batch writes performed by the MongoDB
       sink task with a duration that exceeded 10000 milliseconds.

   * - **batch-writes-failed**
     - The total number of batches a MongoDB sink task failed to write
       to the MongoDB server.

   * - **batch-writes-failed-duration**
     - The total number of milliseconds a MongoDB sink task spent
       unsuccessfully attempting to write batches to the MongoDB server.

   * - **batch-writes-failed-duration-over-1-ms**
     - The total number of failed batch writes attempted by the MongoDB
       sink task with a duration that exceeded 1 millisecond.

   * - **batch-writes-failed-duration-over-10-ms**
     - The total number of failed batch writes attempted by the MongoDB
       sink task with a duration that exceeded 10 milliseconds.

   * - **batch-writes-failed-duration-over-100-ms**
     - The total number of failed batch writes attempted by the MongoDB sink
       task with a duration that exceeded 100 milliseconds.

   * - **batch-writes-failed-duration-over-1000-ms**
     - The total number of failed batch writes attempted by the MongoDB sink
       task with a duration that exceeded 1000 milliseconds.

   * - **batch-writes-failed-duration-over-10000-ms**
     - The total number of failed batch writes attempted by the MongoDB sink
       task with a duration that exceeded 10000 milliseconds.

Source Connector JMX Metrics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 40 60

   * - Attribute Name
     - Description

   * - **records**
     - The total number of records a MongoDB source task passed to the
       {+kc+} framework.

   * - **records-filtered**
     - The number of records a MongoDB source task passed to the
       {+kc+} framework that were then filtered by the framework.
       A filtered record is not written to Kafka.

   * - **records-acknowledged**
     - The total number of records a MongoDB source task passed to the
       {+kc+} framework that were then successfully
       written to Kafka.

   * - **mongodb-bytes-read**
     - The total number of bytes a MongoDB source task read from the
       MongoDB server.

   * - **latest-mongodb-time-difference-secs**
     - The number of seconds of the most recent time difference recorded between
       a MongoDB server and the post-batch resume token held by a MongoDB
       source task. This value is calculated by subtracting the timestamp
       of the task's post-batch resume token from the ``operationTime`` value of
       the most recent successful MongoDB command executed by the task.

   * - **in-task-poll**
     - The total number of times the {+kc+} framework executed
       the ``poll()`` method of a MongoDB source task.

   * - **in-task-poll-duration-ms**
     - The total number of milliseconds the {+kc+} framework
       spent executing the ``poll()`` method of a MongoDB source task.

   * - **in-task-poll-duration-over-1-ms**
     - The total number of MongoDB source task ``poll()`` method executions
       with a duration that exceeded 1 millisecond.

   * - **in-task-poll-duration-over-10-ms**
     - The total number of MongoDB source task ``poll()`` method executions
       with a duration that exceeded 10 milliseconds.

   * - **in-task-poll-duration-over-100-ms**
     - The total number of MongoDB source task ``poll()`` method executions
       with a duration that exceeded 100 milliseconds.

   * - **in-task-poll-duration-over-1000-ms**
     - The total number of MongoDB source task ``poll()`` method executions
       with a duration that exceeded 1000 milliseconds.

   * - **in-task-poll-duration-over-10000-ms**
     - The total number of MongoDB source task ``poll()`` method executions
       with a duration that exceeded 10000 milliseconds.

   * - **in-connect-framework**
     - The total number of times code in the {+kc+} framework
       executed after the first invocation of the ``poll()`` method of the
       MongoDB source task.

   * - **in-connect-framework-duration-ms**
     - The total number of milliseconds spent executing code in the
       {+kc+} framework since the framework first invoked the
       ``poll()`` method of the MongoDB source task. This metric does
       not count time executing code in the MongoDB sink task towards the total.

   * - **in-connect-framework-duration-over-1-ms**
     - The total number of times code in the {+kc+} framework
       executed for a duration that exceeded 1 millisecond.

   * - **in-connect-framework-duration-over-10-ms**
     - The total number of times code in the {+kc+} framework
       executed for a duration that exceeded 10 milliseconds.

   * - **in-connect-framework-duration-over-100-ms**
     - The total number of times code in the {+kc+} framework
       executed for a duration that exceeded 100 milliseconds.

   * - **in-connect-framework-duration-over-1000-ms**
     - The total number of times code in the {+kc+} framework
       executed for a duration that exceeded 1000 milliseconds.

   * - **in-connect-framework-duration-over-10000-ms**
     - The total number of times code in the {+kc+} framework
       executed for a duration that exceeded 10000 milliseconds.

   * - **initial-commands-successful**
     - The total number of initial commands issued by a MongoDB source
       task that succeeded. An initial command is a find or aggregate command
       sent to a MongoDB server that retrieves the first set of documents in a
       cursor. A ``getMore`` command is not an initial command.

   * - **initial-commands-successful-duration-ms**
     - The total number of milliseconds a MongoDB source task spent executing
       initial commands that succeeded.

   * - **initial-commands-successful-duration-over-1-ms**
     - The total number of successful initial commands issued by a MongoDB
       source task with a duration that exceeded 1 millisecond.

   * - **initial-commands-successful-duration-over-10-ms**
     - The total number of successful initial commands issued by a MongoDB
       source task with a duration that exceeded 10 milliseconds. 

   * - **initial-commands-successful-duration-over-100-ms**
     - The total number of successful initial commands issued by a MongoDB
       source task with a duration that exceeded 100 milliseconds.

   * - **initial-commands-successful-duration-over-1000-ms**
     - The total number of successful initial commands issued by a MongoDB
       source task with a duration that exceeded 1000 milliseconds.

   * - **initial-commands-successful-duration-over-10000-ms**
     - The total number of successful initial commands issued by a MongoDB
       source task with a duration that exceeded 10000 milliseconds.

   * - **getmore-commands-successful**
     - The total number of ``getMore`` commands issued by a MongoDB source
       task that succeeded.

   * - **getmore-commands-successful-duration-ms**
     - The total number of milliseconds a MongoDB source task spent executing
       ``getMore`` commands that succeeded.

   * - **getmore-commands-successful-duration-over-1-ms**
     - The total number of successful ``getMore`` commands issued by a
       MongoDB source task with a duration that exceeded 1 millisecond.

   * - **getmore-commands-successful-duration-over-10-ms**
     - The total number of successful ``getMore`` commands issued by a MongoDB
       source task with a duration that exceeded 10 milliseconds.

   * - **getmore-commands-successful-duration-over-100-ms**
     - The total number of successful ``getMore`` commands issued by a MongoDB
       source task with a duration that exceeded 100 milliseconds.

   * - **getmore-commands-successful-duration-over-1000-ms**
     - The total number of successful ``getMore`` commands issued by a
       MongoDB source task with a duration that exceeded 1000 milliseconds.

   * - **getmore-commands-successful-duration-over-10000-ms**
     - The total number of successful ``getMore`` commands issued by a MongoDB
       source task with a duration that exceeded 10000 milliseconds.

   * - **initial-commands-failed**
     - The total number of initial commands issued by a MongoDB source
       task that failed. An initial command is a find or aggregate command
       sent to a MongoDB server that retrieves the first set of documents in a
       cursor. A ``getMore`` command is not an initial command.

   * - **initial-commands-failed-duration-ms**
     - The total number of milliseconds a MongoDB source task spent
       unsuccessfully attempting to issue initial commands to the MongoDB
       server.

   * - **initial-commands-failed-duration-over-1-ms**
     - The total number of failed initial commands issued by a MongoDB
       source task with a duration that exceeded 1 millisecond.

   * - **initial-commands-failed-duration-over-10-ms**
     - The total number of failed initial commands issued by a
       MongoDB source task with a duration that exceeded 10 milliseconds.

   * - **initial-commands-failed-duration-over-100-ms**
     - The total number of failed initial commands issued by a MongoDB source
       task with a duration that exceeded 100 milliseconds.

   * - **initial-commands-failed-duration-over-1000-ms**
     - The total number of failed initial commands issued by a MongoDB source
       task with a duration that exceeded 1000 milliseconds.

   * - **initial-commands-failed-duration-over-10000-ms**
     - The total number of failed initial commands issued by a MongoDB
       source task with a duration that exceeded 10000 milliseconds.

   * - **getmore-commands-failed**
     - The total number of ``getMore`` commands issued by a MongoDB source
       task that failed.

   * - **getmore-commands-failed-duration-ms**
     - The total number of milliseconds a MongoDB source task spent
       unsuccessfully attempting to issue ``getMore`` commands to the MongoDB
       server.

   * - **getmore-commands-failed-duration-over-1-ms**
     - The total number of failed ``getMore`` commands issued by a MongoDB source
       task with a duration that exceeded 1 millisecond.

   * - **getmore-commands-failed-duration-over-10-ms**
     - The total number of failed ``getMore`` commands issued by a MongoDB source
       task with a duration that exceeded 10 milliseconds.

   * - **getmore-commands-failed-duration-over-100-ms**
     - The total number of failed ``getMore`` commands issued by a MongoDB source
       task with a duration that exceeded 100 milliseconds.

   * - **getmore-commands-failed-duration-over-1000-ms**
     - The total number of failed ``getMore`` commands issued by a MongoDB source
       task with a duration that exceeded 1000 milliseconds.

   * - **getmore-commands-failed-duration-over-10000-ms**
     - The total number of failed ``getMore`` commands issued by a MongoDB
       source task with a duration that exceeded 10000 milliseconds.
